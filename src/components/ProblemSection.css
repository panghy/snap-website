.problem-section {
  padding: 8rem 0;
  position: relative;
  overflow: hidden;
}

.problem-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(118, 75, 162, 0.3), transparent);
}

.problem-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}

.problem-title {
  text-align: center;
  margin-bottom: 1rem;
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s ease;
}

.problem-title.visible {
  opacity: 1;
  transform: translateY(0);
}

.problem-title-main {
  display: block;
  font-size: clamp(2rem, 4vw, 3rem);
  font-weight: 900;
  margin-bottom: 0.5rem;
  background: linear-gradient(135deg, #764ba2, #667eea);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.problem-subtitle {
  display: block;
  font-size: 1.2rem;
  color: rgba(255, 255, 255, 0.6);
  font-weight: 400;
}

.problem-intro {
  text-align: center;
  max-width: 700px;
  margin: 0 auto 4rem;
  font-size: 1.1rem;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.7);
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.8s ease 0.2s;
}

.problem-intro.visible {
  opacity: 1;
  transform: translateY(0);
}

.problems-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
  margin-top: 3rem;
}

.problem-card {
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(118, 75, 162, 0.2);
  border-radius: 16px;
  padding: 2rem;
  position: relative;
  overflow: hidden;
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease;
}

.problem-card.visible {
  opacity: 1;
  transform: translateY(0);
}

.problem-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, transparent, #764ba2, transparent);
  animation: scan 3s linear infinite;
}

@keyframes scan {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.problem-card:hover {
  background: rgba(118, 75, 162, 0.05);
  border-color: rgba(118, 75, 162, 0.4);
  transform: translateY(-5px);
}

.problem-icon {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  display: inline-block;
  filter: sepia(1) saturate(2) hue-rotate(230deg) brightness(0.9);
  opacity: 0.8;
}

.problem-card.shake .problem-icon {
  animation: shake 2s ease-in-out infinite;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
  20%, 40%, 60%, 80% { transform: translateX(2px); }
}

.problem-card.pulse .problem-icon {
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}

.problem-card.rotate .problem-icon {
  animation: rotate 4s linear infinite;
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.problem-card.bounce .problem-icon {
  animation: bounce 2s ease-in-out infinite;
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.problem-card.fade .problem-icon {
  animation: fade 2s ease-in-out infinite;
}

@keyframes fade {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.3; }
}

/* Fullscreen mode styles */
.complexity-visualization.fullscreen-mode {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  z-index: 9999 !important;
  background: #0a0a0a !important;
  margin: 0 !important;
  padding: 20px !important;
  box-sizing: border-box !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.complexity-visualization.fullscreen-mode .complexity-svg {
  width: 100% !important;
  height: calc(100vh - 100px) !important;
  max-width: none !important;
}

/* Force landscape orientation hint on mobile */
@media (max-width: 768px) and (orientation: portrait) {
  .complexity-visualization.fullscreen-mode::before {
    content: 'Rotate device for better experience';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: rgba(255, 255, 255, 0.3);
    font-size: 14px;
    text-align: center;
    pointer-events: none;
    z-index: -1;
  }
}

.problem-card h3 {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
  color: rgba(255, 255, 255, 0.9);
}

.problem-card p {
  color: rgba(255, 255, 255, 0.6);
  line-height: 1.5;
}

.problem-glitch {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent 30%, rgba(118, 75, 162, 0.1) 50%, transparent 70%);
  transform: translateX(-100%);
  transition: transform 0.6s;
}

.problem-card:hover .problem-glitch {
  transform: translateX(100%);
}

.complexity-visualization {
  position: relative;
  padding: 2rem;
  background: rgba(118, 75, 162, 0.02);
  border-radius: 20px;
  border: 1px solid rgba(118, 75, 162, 0.1);
  margin-bottom: 2rem;
  transition: background 0.5s ease;
}

.complexity-visualization.error-state {
  background: linear-gradient(135deg, rgba(231, 76, 60, 0.08), rgba(192, 57, 43, 0.12));
}

.complexity-svg {
  width: 100%;
  height: auto;
}

.chaos-line {
  stroke-dasharray: 5 5;
  animation: dash 20s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: -100;
  }
}

.service-dot {
  animation: flicker 3s ease-in-out infinite;
}

.service-dot:nth-child(odd) {
  animation-delay: 0.5s;
}

@keyframes flicker {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 0.2; }
}

.complexity-label {
  fill: rgba(255, 255, 255, 0.4);
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

.service-label {
  fill: rgba(255, 255, 255, 0.8);
  font-size: 12px;
  font-weight: 600;
}

.service-label-small {
  font-size: 9px;
  fill: white;
  font-weight: 500;
  font-family: 'JetBrains Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
  letter-spacing: -0.5px;
}

.active-service {
  animation: pulse-service 1s ease-in-out;
}

@keyframes pulse-service {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

.status-indicator {
  animation: pop-in 0.3s ease-out;
}

@keyframes pop-in {
  from { 
    transform: scale(0);
    opacity: 0;
  }
  to { 
    transform: scale(1);
    opacity: 1;
  }
}

.transaction-line {
  animation: draw-line 1s ease-out;
}

@keyframes draw-line {
  from { 
    stroke-dashoffset: 100;
  }
  to { 
    stroke-dashoffset: 0;
  }
}

.failure-indicators {
  display: flex;
  justify-content: center;
  gap: 2rem;
  margin-top: 1rem;
}

.indicator {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 20px;
  opacity: 0.3;
  transition: all 0.3s ease;
}

.indicator.active {
  opacity: 1;
  background: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.2);
}

.indicator.success {
  opacity: 1;
  background: rgba(46, 204, 113, 0.1);
  border-color: rgba(46, 204, 113, 0.3);
}

.indicator.failed {
  opacity: 1;
  background: rgba(231, 76, 60, 0.1);
  border-color: rgba(231, 76, 60, 0.3);
}

.indicator.error {
  opacity: 1;
  background: rgba(241, 196, 15, 0.1);
  border-color: rgba(241, 196, 15, 0.3);
}

.indicator-icon {
  font-size: 1rem;
}

@media (max-width: 1200px) {
  .problems-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

.protocol-label {
  font-size: 8px;
  font-weight: 500;
  letter-spacing: 0.02em;
  font-family: 'JetBrains Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
  opacity: 0.9;
}

.connection-label {
  font-size: 9px;
  font-weight: 400;
  opacity: 0.7;
  font-family: 'JetBrains Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
}

.subtitle-text {
  fill: rgba(255, 255, 255, 0.5);
  font-size: 11px;
  font-weight: 400;
  font-family: 'JetBrains Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
}

.replay-button {
  position: absolute;
  bottom: 20px;
  left: 20px;
  background: rgba(102, 126, 234, 0.2);
  border: 1px solid rgba(102, 126, 234, 0.4);
  color: white;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  z-index: 10;
}

.replay-button:hover {
  background: rgba(102, 126, 234, 0.3);
  border-color: rgba(102, 126, 234, 0.6);
  transform: scale(1.1);
}

.error-background {
  animation: pulse-error 2s ease-in-out infinite;
}

@keyframes pulse-error {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.5; }
}

.shimmer-line {
  filter: drop-shadow(0 0 3px currentColor);
}

.connection-path {
  transition: opacity 0.8s ease-in-out, stroke 0.8s ease-in-out, stroke-width 0.8s ease-in-out;
}

.connection-glow {
  transition: opacity 0.8s ease-in-out;
}

.shimmer-overlay {
  transition: opacity 0.8s ease-in-out;
}


.subtitle-text {
  color: rgba(255, 255, 255, 0.5);
  font-size: 11px;
  font-family: 'JetBrains Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
  display: flex;
  align-items: center;
  height: 14px;
  top: 50%;
  transform: translateY(-50%);
}

.subtitle-enter {
  animation: slideIn 0.6s ease-out forwards;
}

.subtitle-exit {
  animation: slideOut 0.6s ease-out forwards;
}

@keyframes slideIn {
  from {
    transform: translateY(calc(-50% + 20px));
    opacity: 0;
  }
  to {
    transform: translateY(-50%);
    opacity: 1;
  }
}

@keyframes slideOut {
  from {
    transform: translateY(-50%);
    opacity: 1;
  }
  to {
    transform: translateY(calc(-50% - 20px));
    opacity: 0;
  }
}

@media (max-width: 768px) {
  .problems-grid {
    grid-template-columns: 1fr;
  }
}